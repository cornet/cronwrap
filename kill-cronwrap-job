#!/bin.sh

# usage: kill-cronwrap-job jobname
# jon@zomo.co.uk. See README for blurbs.

# kill-cronwrap-job looks for stuck cronwrap'd jobs by
# discovering the lockrun PID by fuser'ing the lockfile
# and then using pgrep/pkill to kill the actual cron job
#
# requires fuser, pgrep, pkill (Linux, Solaris)

NAME=$1
LOG_DIR=${CRONWRAP_LOG_DIR:-/var/log/cronwrap}
LOCK_DIR=${CRONWRAP_LOCK_DIR:-/var/run/cronwrap}
CRON_DIR=${LOG_DIR}/${NAME}
LOCK=${LOCK_DIR}/${NAME}.lock

if [ ! -d ${CRON_DIR} ] ; then
  echo "can't find logs for this job at ${CRON_DIR}"
  exit 1
fi

if fuser -s ${LOCK} ; then
  echo "job: locked"
 _PID=$( fuser ${LOCK} 2>&1 | awk '{print $NF;}' )
  if [ -z "${_PID}" ] ; then
    echo "couldn't recover PID from fuser."
    exit 1
  fi
  echo "lockrun pid: ${_PID}"
  echo "child processes:"
  pgrep -l -P ${_PID}
  echo "look ok? ^C to abort, return to kill these processes"
  read
  pkill -P ${_PID} $2
  sleep 1 
  echo "child processes:"
  pgrep -l -P ${_PID}
else 
  echo "job: not running"
fi

